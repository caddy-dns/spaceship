name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-test:
    name: Build & Test (Go ${{ matrix.go }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.25' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            # Module cache (read-only restore ok)
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go }}-
            ${{ runner.os }}-go-

      - name: Go Env
        run: go env

      - name: Verify formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo 'Go files not formatted. Run gofmt.'
            gofmt -l .
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: Build
        run: go build ./...

      - name: Test (race)
        run: go test -race -count=1 -v ./...

  lint-staticcheck:
    name: Staticcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - name: Run staticcheck
        run: staticcheck ./...
